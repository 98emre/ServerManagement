@inject NavigationManager NavigationManager


@if (Server != null)
{
    <li>
        @Server.Name in @Server.City is <span style="color: @((Server.IsOnline) ? "green" : "red")">@(Server.IsOnline ? "online" : "offline")</span>

        <a href="/servers/@Server.ServerId" class="btn btn-link m-e">Edit</a>

        <EditForm Model="Server"
                  FormName="@($"form-server-{Server.ServerId}")"
                  OnValidSubmit="@(() => {DeleteServer(Server.ServerId); })">

            <button type="submit" class="btn btn-danger">Delete</button>

        </EditForm>

    </li>
}

@code {

    [Parameter]
    public Server? Server { get; set; }

    protected override void OnParametersSet()
    {
        Server ??= new Server { Name = "Server1", City = "Toronto" };
    }

    private async Task DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            NavigationManager.NavigateTo("/servers", true);
        }
    }
}
